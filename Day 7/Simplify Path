class Solution {
public:
    string simplifyPath(string path) {
        string curr;
        vector<string> can;
        int state=0;       //not reading directory name;
        for(int i=0;i<path.length();i++)
        {
            if(path[i]=='/' && state==0)
            {
                if(path[i+1]!='/')
                {
                    state=1;
                }
            }
            else if(path[i]=='/' && state==1)
            {
                if(path[i+1]!='/')
                {
                    if(curr==".")
                    {
                    }
                    else if(curr=="..")
                    {   
                        if(can.size()>0)
                            can.pop_back();
                    }
                    else
                    {
                        can.push_back(curr);
                    }
                    curr.clear();
                }
            }
            else
            {
                curr+=path[i];
            }
        }
        if(curr.size()>0)   // cases where input string does not ends with // or / and curr is still non empty
        {
            if(curr=="..")
            {
                if(can.size()>0)
                    can.pop_back();
            }
            else if(curr==".")
            {
                
            }
            else
            {
                can.push_back(curr);
            }
        }
        string res;
        res+="/";
        for(int i=0;i<can.size();i++)
        {
            res+=can[i];
            res+="/";
        }
        if(res.size()>1)
        res.pop_back();
        return res;
    }
};
