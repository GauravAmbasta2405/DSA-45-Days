class Solution {
public:
    bool helper(int i, int j, int n, int m, vector<vector<char>>& board, int idx, string word)
    {
        if(i>=0 && j>=0 && i<n && j<m && board[i][j] != '#')
        {
            if(board[i][j] == word[idx]) idx++;
            else return false;                                 //To maintain continuity in matching if a
            if(idx == word.size()) return true;                //single char doesnt match in continuation 
                                                               //then return false
            char temp = board[i][j];
            board[i][j] = '#';
            
            if(helper(i-1, j, n, m, board, idx, word)) return true;
            if(helper(i+1, j, n, m, board, idx, word)) return true;
            if(helper(i, j-1, n, m, board, idx, word)) return true;
            if(helper(i, j+1, n, m, board, idx, word)) return true;
            
            board[i][j] = temp;
        }
        
        return false;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int n = board.size();
        int m = board[0].size();
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++)
            {   
                if(board[i][j] == word[0])
                {
                    if(helper(i, j, n, m, board, 0, word)) return true;                
                }
            }
        }
        return false;
    }
};
